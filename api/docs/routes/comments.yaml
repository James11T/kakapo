comments:
  get:
    operationId: get-comments
    summary: Get comments
    description: Get comments on a post.
    tags:
      - posts
      - comments
    parameters:
      - $ref: "../schemas/posts.yaml#/components/postIdPathProperty"
    responses:
      "200":
        description: Comments returned.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "../schemas/comments.yaml#/components/comment"
      "404":
        description: Post not found.
        content:
          application/json:
            schema:
              $ref: "../schemas/posts.yaml#/components/postNotFoundResponseBody"
  post:
    operationId: create-comment
    summary: Create comment
    description: Add a new comment to a post as the currently authenticated user.
    tags:
      - posts
      - comments
    parameters:
      - $ref: "../schemas/posts.yaml#/components/postIdPathProperty"
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "../schemas/comments.yaml#/components/createCommentBody"
    responses:
      "200":
        description: Comment created successfully.
        content:
          application/json:
            schema:
              $ref: "../schemas/comments.yaml#/components/comment"
      "400":
        description: Invalid comment data.
        content:
          application/json:
            schema:
              $ref: "../schemas/generic.yaml#/components/badParametersResponseBody"
              title: Invalid parameters
      "404":
        description: Post not found.
        content:
          application/json:
            schema:
              $ref: "../schemas/posts.yaml#/components/postNotFoundResponseBody"

comment:
  get:
    operationId: get-comment
    summary: Get comment
    description: Get an individual comment by ID.
    tags:
      - posts
      - comments
    parameters:
      - $ref: "../schemas/posts.yaml#/components/postIdPathProperty"
      - $ref: "../schemas/comments.yaml#/components/commentIdPathProperty"
    responses:
      "200":
        description: Comment returned.
        content:
          application/json:
            schema:
              $ref: "../schemas/comments.yaml#/components/comment"
      "404":
        description: Post or comment not found.
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "../schemas/comments.yaml#/components/commentNotFoundResponseBody"
                - $ref: "../schemas/posts.yaml#/components/postNotFoundResponseBody"
  delete:
    operationId: delete-comment
    summary: Delete comment
    description: Delete a comment by ID.
    tags:
      - posts
      - comments
    parameters:
      - $ref: "../schemas/posts.yaml#/components/postIdPathProperty"
      - $ref: "../schemas/comments.yaml#/components/commentIdPathProperty"
    responses:
      "204":
        description: Comment successfully deleted.
      "404":
        description: Post or comment not found.
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "../schemas/comments.yaml#/components/commentNotFoundResponseBody"
                - $ref: "../schemas/posts.yaml#/components/postNotFoundResponseBody"
  patch:
    operationId: edit-comment
    summary: Edit comment
    description: Update the contents of a comment, setting the edited property of a comment in the process.
    tags:
      - posts
      - comments
    parameters:
      - $ref: "../schemas/posts.yaml#/components/postIdPathProperty"
      - $ref: "../schemas/comments.yaml#/components/commentIdPathProperty"
    responses:
      "200":
        description: Comment successfully edited.
        content:
          application/json:
            schema:
              $ref: "../schemas/comments.yaml#/components/comment"
      "400":
        description: Invalid comment data.
        content:
          application/json:
            schema:
              $ref: "../schemas/generic.yaml#/components/badParametersResponseBody"
              title: Invalid parameters
      "404":
        description: Post or comment not found.
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "../schemas/comments.yaml#/components/commentNotFoundResponseBody"
                - $ref: "../schemas/posts.yaml#/components/postNotFoundResponseBody"

comment-likes:
  get:
    operationId: get-comment-likes
    summary: Get comment like count
    description: Get the number of likes a given comment has.
    tags:
      - posts
      - comments
      - comment-likes
    parameters:
      - $ref: "../schemas/posts.yaml#/components/postIdPathProperty"
      - $ref: "../schemas/comments.yaml#/components/commentIdPathProperty"
    responses:
      "200":
        description: Comment likes returned.
        content:
          application/json:
            schema:
              $ref: "../schemas/comments.yaml#/components/commentLikeCountResponseBody"
      "404":
        description: Post or comment not found.
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "../schemas/comments.yaml#/components/commentNotFoundResponseBody"
                - $ref: "../schemas/posts.yaml#/components/postNotFoundResponseBody"
  post:
    operationId: like-comment
    summary: Like a comment
    description: Like a comment based on ID.
    tags:
      - posts
      - comments
      - comment-likes
    parameters:
      - $ref: "../schemas/posts.yaml#/components/postIdPathProperty"
      - $ref: "../schemas/comments.yaml#/components/commentIdPathProperty"
    responses:
      "200":
        description: Comment liked successfully.
      "404":
        description: Post or comment not found.
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "../schemas/comments.yaml#/components/commentNotFoundResponseBody"
                - $ref: "../schemas/posts.yaml#/components/postNotFoundResponseBody"
  delete:
    operationId: unlike-comment
    summary: Unlike a comment
    description: Remove a like from a comment based on comment ID.
    tags:
      - posts
      - comments
      - comment-likes
    parameters:
      - $ref: "../schemas/posts.yaml#/components/postIdPathProperty"
      - $ref: "../schemas/comments.yaml#/components/commentIdPathProperty"
    responses:
      "200":
        description: Comment like removed successfully.
        content:
          application/json:
            schema:
              $ref: "../schemas/comments.yaml#/components/commentLikeCountResponseBody"
      "400":
        description: Not liked.
        content:
          application/json:
            schema:
              $ref: "../schemas/comments.yaml#/components/commentNotLikedResponseBody"
      "404":
        description: Post or comment not found.
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "../schemas/comments.yaml#/components/commentNotFoundResponseBody"
                - $ref: "../schemas/posts.yaml#/components/postNotFoundResponseBody"
